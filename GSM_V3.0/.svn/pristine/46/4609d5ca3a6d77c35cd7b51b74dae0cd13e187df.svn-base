<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dykj.GSM.mapper.documentquery.mapperinterf.DocumentQueryMapper">
   <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
   <resultMap type="DocumentQuery" id="documentqueryResult">
            <id column="CODE" property="code"/>
        <result column="CREATE_DATE" jdbcType="VARCHAR" property="createDate" />
	    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
	    <result column="FLAG_DEL" jdbcType="CHAR" property="flagDel" />
	    <result column="FLAG_DISPLAY" jdbcType="CHAR" property="flagDisplay" />
	    <result column="SORT" jdbcType="DECIMAL" property="sort" />
	    <result column="REMARK" jdbcType="VARCHAR" property="remark" />	    
	    <result column="DOCUMENT_NAME" jdbcType="VARCHAR" property="documentName" />
		<result column="DOCUMENT_SIZE" jdbcType="VARCHAR" property="documentSize" />
		<result column="CODE_DOCUMNET_TYPE" jdbcType="VARCHAR" property="codeDocumnetType" />
		<result column="FILE_CODE" jdbcType="VARCHAR" property="fileCode" />
		<result column="GRID_CODE" jdbcType="VARCHAR" property="gridCode" />
   </resultMap>
   <!-- <parameterMap type="map" id="paramMap">
      <parameter property="param" javaType="com.dykj.GSM.model.User" jdbcType="OTHER"/>
   </parameterMap> -->
   <!-- 保存实体对象  -->
   <!-- keyProperty	selectKey 语句结果应该被设置的目标属性。  -->
   <!-- resultType	结果的类型。MyBatis 通常可以算出来,但是写上也没有问题。MyBatis 允许任何简单类型用作主键的类型,包括字符串。 -->
   <!-- order	这可以被设置为 BEFORE 或 AFTER。如果设置为 BEFORE,那么它会首先选择主键,设置 keyProperty 然后执行插入语句。
   如果设置为 AFTER,那么先执行插入语句,然后是 selectKey 元素-这和如 Oracle 数据库相似,可以在插入语句中嵌入序列调用。 -->
   <!-- statementType	和前面的相 同,MyBatis 支持 STATEMENT ,PREPARED 和CALLABLE 语句的映射类型,分别代表 PreparedStatement 和CallableStatement 类型。 -->
   <insert id="insert" parameterType="DocumentQuery">
      <selectKey keyProperty="code" resultType="String" order="BEFORE">
        SELECT SYS_GUID() FROM DUAL
      </selectKey>
        INSERT INTO DOCUMENT_QUERY
               (CODE,CREATE_DATE,CREATE_BY,SORT,REMARK,DOCUMENT_NAME,DOCUMENT_SIZE,CODE_DOCUMNET_TYPE,FILE_CODE,GRID_CODE) 
        VALUES (#{code,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR},
                #{remark,jdbcType=VARCHAR}, #{documentName,jdbcType=VARCHAR}, #{documentSize,jdbcType=VARCHAR},#{codeDocumnetType,jdbcType=VARCHAR},#{fileCode,jdbcType=VARCHAR},#{gridCode,jdbcType=VARCHAR})
   </insert>
    
    <!-- 更新实体对象   -->
    <update id="update" parameterType="DocumentQuery">
        UPDATE DOCUMENT_QUERY 
        <set>
              <if test="createDate != null and createDate != ''">
		        CREATE_DATE = #{createDate,jdbcType=VARCHAR},
		      </if>
		      <if test="createBy != null and createBy != ''">
		        CREATE_BY = #{createBy,jdbcType=VARCHAR},
		      </if>
		      <if test="sort != null and sort != ''">
		        SORT = #{sort,jdbcType=DECIMAL},
		      </if>
		      <if test="remark != null and remark != ''">
		        REMARK = #{remark,jdbcType=VARCHAR},
		      </if>
		      <if test="documentName != null and documentName != ''">
		        DOCUMENT_NAME = #{documentName,jdbcType=VARCHAR},
		      </if>
			  <if test="documentSize != null and documentSize != ''">
		        DOCUMENT_SIZE = #{documentSize,jdbcType=VARCHAR},
		      </if>
		   	  <if test="codeDocumnetType != null and codeDocumnetType != ''">
		        CODE_DOCUMNET_TYPE = #{codeDocumnetType,jdbcType=VARCHAR},
		      </if>
		       <if test="fileCode != null and fileCode != ''">
		        FILE_CODE = #{fileCode,jdbcType=VARCHAR},
		      </if>
		      <if test="gridCode != null and gridCode != ''">
		        GRID_CODE = #{gridCode,jdbcType=VARCHAR},
		      </if>
        </set> 
        <where>
           <if test="code != null and code != ''">
              CODE = #{code,jdbcType=VARCHAR}
           </if>
        </where>
    </update>
     <!-- 更新实体对象 (参数)  -->
    <update id="updateParam" parameterType="java.util.Map">
       UPDATE DOCUMENT_QUERY 
         <set>
              <if test="createDate != null and createDate != ''">
		        CREATE_DATE = #{createDate,jdbcType=VARCHAR},
		      </if>
		      <if test="createBy != null and createBy != ''">
		        CREATE_BY = #{createBy,jdbcType=VARCHAR},
		      </if>
		      <if test="flagDel != null and flagDel != ''">
                FLAG_DEL = #{flagDel,jdbcType=VARCHAR},
              </if>
		      <if test="flagDisplay != null and flagDisplay != ''">
		        FLAG_DISPLAY = #{flagDisplay,jdbcType=VARCHAR},
		      </if>
		      <if test="sort != null and sort != ''">
		        SORT = #{sort,jdbcType=DECIMAL},
		      </if>
		      <if test="remark != null and remark != ''">
		        REMARK = #{remark,jdbcType=VARCHAR},
		      </if>
		      <if test="documentName != null and documentName != ''">
		        DOCUMENT_NAME = #{documentName,jdbcType=VARCHAR},
		      </if>
			  <if test="documentSize != null and documentSize != ''">
		        DOCUMENT_SIZE = #{documentSize,jdbcType=VARCHAR},
		      </if>
		   	  <if test="codeDocumnetType != null and codeDocumnetType != ''">
		        CODE_DOCUMNET_TYPE = #{codeDocumnetType,jdbcType=VARCHAR},
		      </if>
		      <if test="fileCode != null and fileCode != ''">
		        FILE_CODE = #{fileCode,jdbcType=VARCHAR},
		      </if>
		      <if test="gridCode != null and gridCode != ''">
		        GRID_CODE = #{gridCode,jdbcType=VARCHAR},
		      </if>
        </set>
        <where>
           <if test="code != null and code != ''">
              CODE = #{code,jdbcType=VARCHAR}
           </if>
        </where>
    </update>
     <!-- 批量更新 (注：由于业务上暂时没有要求，
     所以预留批量更新的接口，但没有具体实现功能)-->  
   <update id="updateBatch" parameterType="DocumentQuery"></update>
    
    <!-- 根据主键删除实体对象 -->
    <!-- <delete id="deletePk" parameterType="int">
        DELETE FROM R_USERS WHERE CODE=#{code}
    </delete> -->
    <!-- 根据主键删除实体对象(为假删，规定：0为显示，1为删除) -->
    <update id="deletePk" parameterType="String">
       UPDATE DOCUMENT_QUERY SET FLAG_DEL=1 WHERE CODE=#{code}
    </update>
    
    <!-- 根据参数删除实体对象(为假删，规定：0为显示，1为删除) ，预留接口，但不对其实现功能-->
    <update id="deleteParam" parameterType="int">
    </update>
    
    <!-- 批量删除(为假删，规定：0为显示，1为删除) ，预留接口，但不对其实现功能-->
    <update id="deleteBatch">
       UPDATE DOCUMENT_QUERY SET FLAG_DEL=1 WHERE CODE IN 
       <trim prefix="(" suffix=")" suffixOverrides=",">
          <foreach collection="list" item="code" separator=",">
	          #{code}
          </foreach>
       </trim>
    </update>
    
    <!-- 根据主键查询实体对象  -->
    <select id="queryByKey" parameterType="String" resultMap="documentqueryResult">
       SELECT DOCUMENT_QUERY.*,grid.gridtotalname 
   		   FROM DOCUMENT_QUERY 
   		   join <include refid="selectGridSql"></include> grid 
   		   on grid.code=DOCUMENT_QUERY.grid_code 
        WHERE FLAG_DEL != 1 AND DOCUMENT_QUERY.CODE=#{code}
    </select>
    
     <!-- 查询所有实体对象集合  -->
   <select id="queryList" resultMap="documentqueryResult">
   		SELECT * FROM DOCUMENT_QUERY where FLAG_DEL !=1 ORDER BY CODE ASC 
   </select>
    
   <!-- 根据条件查询所有实体对象集合  -->
   <select id="queryListParam" parameterType="DocumentQuery" resultMap="documentqueryResult">
   		   SELECT * FROM DOCUMENT_QUERY 
   		   <where>
   		      FLAG_DEL != 1
		     <if test="createDate != null and createDate != ''">
		        CREATE_DATE = #{createDate,jdbcType=VARCHAR}
		      </if>
		      <if test="createBy != null and createBy != ''">
		        AND CREATE_BY = #{createBy,jdbcType=VARCHAR}
		      </if>
		      <if test="flagDel != null and flagDel != ''">
                AND FLAG_DEL = #{flagDel,jdbcType=VARCHAR}
              </if>
		      <if test="flagDisplay != null and flagDisplay != ''">
		        AND FLAG_DISPLAY = #{flagDisplay,jdbcType=VARCHAR}
		      </if>
		      <if test="sort != null and sort != ''">
		        AND SORT = #{sort,jdbcType=DECIMAL}
		      </if>
		      <if test="remark != null and remark != ''">
		        AND REMARK = #{remark,jdbcType=VARCHAR}
		      </if>
		      <if test="documentName != null and documentName != ''">
		        AND DOCUMENT_NAME = #{documentName,jdbcType=VARCHAR}
		      </if>
			  <if test="documentSize != null and documentSize != ''">
		        AND DOCUMENT_SIZE = #{documentSize,jdbcType=VARCHAR}
		      </if>
		   	  <if test="codeDocumnetType != null and codeDocumnetType != ''">
		        AND CODE_DOCUMNET_TYPE = #{codeDocumnetType,jdbcType=VARCHAR}
		      </if>
		       <if test="fileCode != null and fileCode != ''">
		        AND FILE_CODE = #{fileCode,jdbcType=VARCHAR}
		      </if>
		      <if test="gridCode != null and gridCode != ''">
		        AND GRID_CODE = #{gridCode,jdbcType=VARCHAR}
		      </if>
   		   </where>
   </select>
    <sql id="selectGridSql" >
   (select '01' as code,'唐山市' as name,'唐山市'as gridtotalname from dual
		union all
		select to_char(sss.code) as code,to_char(sss.name) as name,to_char(sss.grid_total_name) as gridtotalname from sys_seat_second sss where sss.flag_del!=1
		union all 
		select to_char(sst.code) as code,to_char(sst.name) as name,to_char(sst.grid_total_name) as gridtotalname from sys_seat_third sst where sst.flag_del!=1
		union all 
		select to_char(ssf.code) as code,to_char(ssf.name) as name,to_char(ssf.grid_total_name) as gridtotalname from sys_seat_four ssf where ssf.flag_del!=1
		union all 
		select to_char(ssg.code) as code,to_char(ssg.name) as name,to_char(ssg.grid_total_name) as gridtotalname from sys_seat_grid ssg where ssg.flag_del!=1
		)
   </sql>
    <!-- 分页查询,所有实体对象集合  -->
   <select id="queryParamPage" parameterType="DocumentQuery" resultMap="documentqueryResult">
   		   SELECT DOCUMENT_QUERY.*,grid.gridtotalname 
   		   FROM DOCUMENT_QUERY 
   		   join <include refid="selectGridSql"></include> grid 
   		   on grid.code=DOCUMENT_QUERY.grid_code 
   		   <where>
   		      FLAG_DEL != 1
		      <if test="createDate != null and createDate != ''">
		        CREATE_DATE = #{createDate,jdbcType=VARCHAR}
		      </if>
		      <if test="createBy != null and createBy != ''">
		        AND CREATE_BY = #{createBy,jdbcType=VARCHAR}
		      </if>
		      <if test="documentName != null and documentName != ''">
		        AND DOCUMENT_NAME LIKE CONCAT(CONCAT('%', #{documentName,jdbcType=VARCHAR}),'%')
		      </if>
			  <if test="documentSize != null and documentSize != ''">
		        AND DOCUMENT_SIZE = #{documentSize,jdbcType=VARCHAR}
		      </if>
		   	  <if test="codeDocumnetType != null and codeDocumnetType != ''">
		        AND CODE_DOCUMNET_TYPE LIKE CONCAT(CONCAT('%', #{codeDocumnetType,jdbcType=VARCHAR}),'%')
		      </if>
		      <if test="fileCode != null and fileCode != ''">
		        AND FILE_CODE = #{fileCode,jdbcType=VARCHAR}
		      </if>
		      <if test="gridCode != null and gridCode != ''">
		        AND GRID_CODE = #{gridCode,jdbcType=VARCHAR}
		      </if>
   		   </where>
   </select>
   
    <!-- 分页带参,查询所有实体对象集合  -->
   <select id="queryPage" parameterType="java.util.Map" resultMap="documentqueryResult">
   		SELECT * FROM DOCUMENT_QUERY where FLAG_DEL !=1 
   </select>
    
   <!--  查询总记录数据  -->
   <select id="queryAllCount"  resultType="Integer">
   		SELECT COUNT(*) C FROM DOCUMENT_QUERY WHERE FLAG_DEL != 1
   </select>
   
    <!--  查询总记录数据  -->
   <select id="queryAllCountParam" parameterType="DocumentQuery" resultType="Integer">
   		<!-- <bind name="loginName" value="'%'+_parameter.loginName+'%'"/> -->
   		   SELECT COUNT(*) C FROM DOCUMENT_QUERY 
   		   <where>
   		      FLAG_DEL != 1
		      <if test="createDate != null and createDate != ''">
		        CREATE_DATE = #{createDate,jdbcType=VARCHAR}
		      </if>
		      <if test="createBy != null and createBy != ''">
		        AND CREATE_BY = #{createBy,jdbcType=VARCHAR}
		      </if>
		      <if test="sort != null and sort != ''">
		        AND SORT = #{sort,jdbcType=DECIMAL}
		      </if>
		      <if test="remark != null and remark != ''">
		        AND REMARK = #{remark,jdbcType=VARCHAR}
		      </if>
			  <if test="documentName != null and documentName != ''">
			    AND DOCUMENT_NAME LIKE CONCAT(CONCAT('%', #{documentName,jdbcType=VARCHAR}),'%')
		      </if>
			  <if test="documentSize != null and documentSize != ''">
		        AND DOCUMENT_SIZE = #{documentSize,jdbcType=VARCHAR}
		      </if>
		   	  <if test="codeDocumnetType != null and codeDocumnetType != ''">
		   	    AND CODE_DOCUMNET_TYPE LIKE CONCAT(CONCAT('%', #{codeDocumnetType,jdbcType=VARCHAR}),'%')
		      </if>
		      <if test="fileCode != null and fileCode != ''">
		        AND FILE_CODE = #{fileCode,jdbcType=VARCHAR}
		      </if>
		      <if test="gridCode != null and gridCode != ''">
		        AND GRID_CODE = #{gridCode,jdbcType=VARCHAR}
		      </if>
   		   </where>
   </select>
</mapper>
 